import numpy as npdef Erdos_Renyi(n, seed=np.nan):    '''    Input:    n -> number of nodes    seed -> seed for pseudo-random number generation    Output:    adj_matrix -> weighted adjacency matrix for Erdos Renyi graph    '''    # Preallocate output    adj_matrix=np.zeros([n,n])    # set seed    if not np.isnan(seed):        rng=np.random.default_rng(seed)    else:        rng=np.random.default_rng()    # generate upper triangle    for i in range(0,n-1):        for j in range(i+1,n):            adj_matrix[i,j] = rng.uniform()    # generate whole matrix    adj_matrix = adj_matrix+ adj_matrix.transpose()    return adj_matrix